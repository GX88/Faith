name: 🛠 Android CI / 自动版本发布（拆仓）

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出私有源码
      - name: 📂 检出代码
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MY_PERSON_TOKEN }}   # 用于推送 tag

      # 2. Java & Flutter 环境
      - name: ☕️ 设置 Java 环境 (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: 🦋 设置 Flutter 环境
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      # 3. 构建 APK
      - name: 📥 获取依赖 & 构建
        run: |
          flutter pub get
          flutter build apk --release

      # 4. 解析 version 并检测公开仓是否已存在对应 tag
      - name: 🔍 解析 version
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version:[[:space:]]*//' | cut -d'+' -f1)
          TAG="v${VERSION}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG=$TAG"         >> $GITHUB_ENV

          EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
                    https://api.github.com/repos/GX88/faith-release/releases/tags/${TAG})
          if [ "$EXISTS" = "200" ]; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      # 5. 生成 SHA-1 并改名
      - name: 🔐 生成 SHA-1 & 重命名产物
        run: |
          cd build/app/outputs/flutter-apk
          sha1sum app-release.apk | cut -d' ' -f1 > app-release.apk.sha1
          # 统一放到 artifacts，文件名带版本号
          mkdir -p "$GITHUB_WORKSPACE/artifacts"
          cp app-release.apk        "$GITHUB_WORKSPACE/artifacts/faith-preview-${{ env.VERSION }}.apk"
          cp app-release.apk.sha1   "$GITHUB_WORKSPACE/artifacts/faith-preview-${{ env.VERSION }}.apk.sha1"

      # 6. 上传 CI 产物（供调试）
      - name: 📤 上传 CI 产物
        uses: actions/upload-artifact@v4
        with:
          name: faith-preview-${{ env.VERSION }}
          path: artifacts/
          retention-days: 7

      # 7. 若 tag 不存在 → 自动打 tag 并发布到公开仓 
      - name: 🏷️ 创建并推送 tag
        if: env.TAG_EXISTS == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.TAG }}
          git push origin ${{ env.TAG }}

      - name: 🚀 发布到公开仓
        if: env.TAG_EXISTS == 'false'
        uses: ncipollo/release-action@v1.14.0
        with:
          owner: GX88
          repo: faith-release
          tag: ${{ env.TAG }}
          name: Faith ${{ env.TAG }}
          body: |
            ## 📱 Faith 版本发布 ${{ env.TAG }}
            - APK: `faith-preview-${{ env.VERSION }}.apk`
            - SHA-1: `faith-preview-${{ env.VERSION }}.apk.sha1`
          artifacts: |
            artifacts/faith-preview-${{ env.VERSION }}.apk
            artifacts/faith-preview-${{ env.VERSION }}.apk.sha1
          token: ${{ secrets.MY_PERSON_TOKEN }}
          generateReleaseNotes: true
          allowUpdates: true